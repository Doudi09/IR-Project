# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import json

from CODE.Traitement import Data

#all fonction used in traitement

cleaner = Data()
cleaned_collection, max_freq = cleaner.clean_data("text.txt")
cleaned_collection_query,max_freq_query=cleaner.clean_data("query.text")
qrels=cleaner.getqrels("qrels.text")
index_file = open("..\\DATA\\index.json", "r")
collection_file = open("..\\DATA\\collection.json", "r")
index = json.load(index_file)
collection= json.load(collection_file)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(869, 438)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralWidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 10, 871, 441))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.listWidget = QtWidgets.QListWidget(self.tab)
        self.listWidget.setGeometry(QtCore.QRect(160, 160, 401, 161))
        self.listWidget.setObjectName("listWidget")
        self.groupBox_5 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_5.setGeometry(QtCore.QRect(110, 20, 541, 111))
        self.groupBox_5.setObjectName("groupBox_5")
        self.textEdit_2 = QtWidgets.QTextEdit(self.groupBox_5)
        self.textEdit_2.setGeometry(QtCore.QRect(130, 20, 191, 31))
        self.textEdit_2.setObjectName("textEdit_2")
        self.label = QtWidgets.QLabel(self.groupBox_5)
        self.label.setGeometry(QtCore.QRect(30, 30, 55, 16))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton.setGeometry(QtCore.QRect(350, 20, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.radioButton1 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton1.setGeometry(QtCore.QRect(40, 70, 111, 20))
        self.radioButton1.setChecked(True)
        self.radioButton1.setObjectName("radioButton1")
        self.radioButton2 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton2.setGeometry(QtCore.QRect(140, 70, 121, 20))
        self.radioButton2.setObjectName("radioButton2")
        self.radioButton3 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton3.setGeometry(QtCore.QRect(260, 70, 171, 20))
        self.radioButton3.setObjectName("radioButton3")
        self.radioButton4 = QtWidgets.QRadioButton(self.groupBox_5)
        self.radioButton4.setGeometry(QtCore.QRect(360, 70, 171, 20))
        self.radioButton4.setObjectName("radioButton4")
        self.tabWidget.addTab(self.tab, "")
        self.widget = QtWidgets.QWidget()
        self.widget.setObjectName("widget")
        self.listWidget_2 = QtWidgets.QListWidget(self.widget)
        self.listWidget_2.setGeometry(QtCore.QRect(30, 130, 311, 211))
        self.listWidget_2.setObjectName("listWidget_2")
        self.listWidget_3 = QtWidgets.QListWidget(self.widget)
        self.listWidget_3.setGeometry(QtCore.QRect(490, 130, 311, 211))
        self.listWidget_3.setObjectName("listWidget_3")
        self.groupBox = QtWidgets.QGroupBox(self.widget)
        self.groupBox.setGeometry(QtCore.QRect(10, 20, 391, 81))
        self.groupBox.setObjectName("groupBox")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(290, 20, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.textEdit = QtWidgets.QTextEdit(self.groupBox)
        self.textEdit.setGeometry(QtCore.QRect(100, 20, 181, 31))
        self.textEdit.setObjectName("textEdit")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(10, 30, 91, 16))
        self.label_4.setObjectName("label_4")
        self.groupBox_2 = QtWidgets.QGroupBox(self.widget)
        self.groupBox_2.setGeometry(QtCore.QRect(460, 10, 371, 91))
        self.groupBox_2.setObjectName("groupBox_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_4.setGeometry(QtCore.QRect(270, 30, 93, 28))
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setGeometry(QtCore.QRect(10, 40, 55, 16))
        self.label_5.setObjectName("label_5")
        self.textEdit_3 = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEdit_3.setGeometry(QtCore.QRect(80, 30, 181, 31))
        self.textEdit_3.setObjectName("textEdit_3")
        self.radioButton5 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton5.setGeometry(QtCore.QRect(10, 70, 61, 20))
        self.radioButton5.setObjectName("radioButton5")
        self.radioButton6 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton6.setGeometry(QtCore.QRect(90, 70, 61, 20))
        self.radioButton6.setObjectName("radioButton6")
        self.radioButton7 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton7.setGeometry(QtCore.QRect(170, 70, 51, 20))
        self.radioButton7.setObjectName("radioButton7")
        self.radioButton8 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton8.setGeometry(QtCore.QRect(240, 70, 61, 20))
        self.radioButton8.setObjectName("radioButton8")
        self.tabWidget.addTab(self.widget, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupBox_6 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_6.setGeometry(QtCore.QRect(90, 10, 501, 121))
        self.groupBox_6.setObjectName("groupBox_6")
        self.radioButton9 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton9.setGeometry(QtCore.QRect(20, 80, 61, 20))
        self.radioButton9.setObjectName("radioButton9")
        self.radioButton10 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton10.setGeometry(QtCore.QRect(80, 80, 95, 20))
        self.radioButton10.setObjectName("radioButton10")
        self.radioButton11 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton11.setGeometry(QtCore.QRect(150, 80, 51, 20))
        self.radioButton11.setObjectName("radioButton11")
        self.radioButton12 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton12.setGeometry(QtCore.QRect(230, 80, 61, 20))
        self.radioButton12.setObjectName("radioButton12")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_6)
        self.pushButton_3.setGeometry(QtCore.QRect(370, 40, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.comboBox = QtWidgets.QComboBox(self.groupBox_6)
        self.comboBox.setGeometry(QtCore.QRect(280, 40, 71, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.textEdit_4 = QtWidgets.QTextEdit(self.groupBox_6)
        self.textEdit_4.setGeometry(QtCore.QRect(80, 40, 181, 31))
        self.textEdit_4.setObjectName("textEdit_4")
        self.label_8 = QtWidgets.QLabel(self.groupBox_6)
        self.label_8.setGeometry(QtCore.QRect(10, 50, 55, 16))
        self.label_8.setObjectName("label_8")
        self.listWidget_7 = QtWidgets.QListWidget(self.tab_2)
        self.listWidget_7.setGeometry(QtCore.QRect(135, 160, 401, 192))
        self.listWidget_7.setObjectName("listWidget_7")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralWidget)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_5.setTitle(_translate("MainWindow", "fichie"))
        self.label.setText(_translate("MainWindow", "Recherche"))
        self.pushButton.setText(_translate("MainWindow", "recherche"))
        self.radioButton1.setText(_translate("MainWindow", "terme"))
        self.radioButton2.setText(_translate("MainWindow", "document"))
        self.radioButton3.setText(_translate("MainWindow", "collection"))
        self.radioButton4.setText(_translate("MainWindow", "document inverse poids"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "mot et document"))
        self.groupBox.setTitle(_translate("MainWindow", "modele Boolean"))
        self.pushButton_2.setText(_translate("MainWindow", "recherche"))
        self.label_4.setText(_translate("MainWindow", "requete"))
        self.groupBox_2.setTitle(_translate("MainWindow", "modele vectorielle"))
        self.pushButton_4.setText(_translate("MainWindow", "recherche"))
        self.label_5.setText(_translate("MainWindow", "requete"))
        self.radioButton5.setText(_translate("MainWindow", "PI"))
        self.radioButton6.setText(_translate("MainWindow", "COS"))
        self.radioButton7.setText(_translate("MainWindow", "DICE"))
        self.radioButton8.setText(_translate("MainWindow", "JAC"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget), _translate("MainWindow", "modeles"))
        self.groupBox_6.setTitle(_translate("MainWindow", "evaluation"))
        self.radioButton9.setText(_translate("MainWindow", "PI"))
        self.radioButton10.setText(_translate("MainWindow", "COS"))
        self.radioButton11.setText(_translate("MainWindow", "DICE"))
        self.radioButton12.setText(_translate("MainWindow", "JAC"))
        self.pushButton_3.setText(_translate("MainWindow", "recherche"))
        self.comboBox.setItemText(0, _translate("MainWindow", "01"))
        self.comboBox.setItemText(1, _translate("MainWindow", "02"))
        self.comboBox.setItemText(2, _translate("MainWindow", "03"))
        self.comboBox.setItemText(3, _translate("MainWindow", "04"))
        self.comboBox.setItemText(4, _translate("MainWindow", "05"))
        self.comboBox.setItemText(5, _translate("MainWindow", "06"))
        self.comboBox.setItemText(6, _translate("MainWindow", "07"))
        self.comboBox.setItemText(7, _translate("MainWindow", "08"))
        self.comboBox.setItemText(8, _translate("MainWindow", "09"))
        self.comboBox.setItemText(9, _translate("MainWindow", "10"))
        self.comboBox.setItemText(10, _translate("MainWindow", "11"))
        self.comboBox.setItemText(11, _translate("MainWindow", "12"))
        self.comboBox.setItemText(12, _translate("MainWindow", "13"))
        self.comboBox.setItemText(13, _translate("MainWindow", "14"))
        self.comboBox.setItemText(14, _translate("MainWindow", "15"))
        self.comboBox.setItemText(15, _translate("MainWindow", "16"))
        self.comboBox.setItemText(16, _translate("MainWindow", "17"))
        self.comboBox.setItemText(17, _translate("MainWindow", "18"))
        self.comboBox.setItemText(18, _translate("MainWindow", "19"))
        self.comboBox.setItemText(19, _translate("MainWindow", "20"))
        self.comboBox.setItemText(20, _translate("MainWindow", "21"))
        self.comboBox.setItemText(21, _translate("MainWindow", "22"))
        self.comboBox.setItemText(22, _translate("MainWindow", "23"))
        self.comboBox.setItemText(23, _translate("MainWindow", "24"))
        self.comboBox.setItemText(24, _translate("MainWindow", "25"))
        self.comboBox.setItemText(25, _translate("MainWindow", "26"))
        self.comboBox.setItemText(26, _translate("MainWindow", "27"))
        self.comboBox.setItemText(27, _translate("MainWindow", "28"))
        self.comboBox.setItemText(28, _translate("MainWindow", "29"))
        self.comboBox.setItemText(29, _translate("MainWindow", "30"))
        self.comboBox.setItemText(30, _translate("MainWindow", "31"))
        self.comboBox.setItemText(31, _translate("MainWindow", "32"))
        self.comboBox.setItemText(32, _translate("MainWindow", "33"))
        self.comboBox.setItemText(33, _translate("MainWindow", "34"))
        self.comboBox.setItemText(34, _translate("MainWindow", "35"))
        self.comboBox.setItemText(35, _translate("MainWindow", "36"))
        self.comboBox.setItemText(36, _translate("MainWindow", "37"))
        self.comboBox.setItemText(37, _translate("MainWindow", "38"))
        self.comboBox.setItemText(38, _translate("MainWindow", "39"))
        self.comboBox.setItemText(39, _translate("MainWindow", "40"))
        self.comboBox.setItemText(40, _translate("MainWindow", "41"))
        self.comboBox.setItemText(41, _translate("MainWindow", "42"))
        self.comboBox.setItemText(42, _translate("MainWindow", "43"))
        self.comboBox.setItemText(43, _translate("MainWindow", "44"))
        self.comboBox.setItemText(44, _translate("MainWindow", "45"))
        self.comboBox.setItemText(45, _translate("MainWindow", "46"))
        self.comboBox.setItemText(46, _translate("MainWindow", "47"))
        self.comboBox.setItemText(47, _translate("MainWindow", "48"))
        self.comboBox.setItemText(48, _translate("MainWindow", "49"))
        self.comboBox.setItemText(49, _translate("MainWindow", "50"))
        self.comboBox.setItemText(50, _translate("MainWindow", "51"))
        self.comboBox.setItemText(51, _translate("MainWindow", "52"))
        self.comboBox.setItemText(52, _translate("MainWindow", "53"))
        self.comboBox.setItemText(53, _translate("MainWindow", "54"))
        self.comboBox.setItemText(54, _translate("MainWindow", "55"))
        self.comboBox.setItemText(55, _translate("MainWindow", "56"))
        self.comboBox.setItemText(56, _translate("MainWindow", "57"))
        self.comboBox.setItemText(57, _translate("MainWindow", "58"))
        self.comboBox.setItemText(58, _translate("MainWindow", "59"))
        self.comboBox.setItemText(59, _translate("MainWindow", "60"))
        self.comboBox.setItemText(60, _translate("MainWindow", "61"))
        self.comboBox.setItemText(61, _translate("MainWindow", "62"))
        self.comboBox.setItemText(62, _translate("MainWindow", "63"))
        self.comboBox.setItemText(63, _translate("MainWindow", "64"))
        self.label_8.setText(_translate("MainWindow", "requete"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "evaluation"))
        self.pushButton.clicked.connect(lambda: getWordByDoc(self, cleaner, self.textEdit_2.toPlainText()))
        self.pushButton_2.clicked.connect(lambda: getbool(self, self.textEdit.toPlainText(), cleaner, collection))
        self.pushButton_4.clicked.connect(lambda: getVector(self, self.textEdit_3.toPlainText(), cleaner, collection, index))
        self.pushButton_3.clicked.connect(lambda: getEvaluation(self , self.textEdit_4.toPlainText(),self.comboBox.currentText(), cleaner, collection, qrels,index))


def getEvaluation(self, query_text,query, cleaner, collection, qrels,index):
        print("getevaluation")

        if self.radioButton9.isChecked():
            doc = cleaner.evaluate_query_vect(query_text, index, collection, "PI",stemming=True)
            print("doc eval ", query)
            evaluation_rappel,evaluation_precision = cleaner.evaluation_Rappel(doc, query, qrels)
            print("ev rappel",evaluation_rappel)
           # evaluation_precision=cleaner.evaluation_Precision(doc,query,qrels)
            print(evaluation_precision)
            self.listWidget_7.addItem("query text:"+"\t"+str(query_text)+"\n"+"rappel"+"\t"+str(evaluation_rappel)
                                      +"\n"+"precision :"+"\t"+str(evaluation_precision))
            print("evl rappel", evaluation_rappel)
        if self.radioButton10.isChecked():
            doc = cleaner.evaluate_query_vect(query_text, index, collection, "COS", stemming=True)
            print("doc eval ", query)
            evaluation_rappel,evaluation_precision  = cleaner.evaluation_Rappel(doc, query, qrels)
            #evaluation_precision = cleaner.evaluation_Precision(doc, query, qrels)
            self.listWidget_7.addItem(
                "query text:" + "\t" + str(query_text) + "\n" + "rappel" + "\t" + str(evaluation_rappel)
            +"\n"+"precision :"+"\t"+str(evaluation_precision))
            print("evl rappel", evaluation_rappel)
        if self.radioButton11.isChecked():
            doc = cleaner.evaluate_query_vect(query_text, index, collection, "DICE", stemming=True)
            print("doc eval ", query)
            evaluation_rappel,evaluation_precision  = cleaner.evaluation_Rappel(doc, query, qrels)
            #evaluation_precision = cleaner.evaluation_Precision(doc, query, qrels)
            self.listWidget_7.addItem(
                "query text:" + "\t" + str(query_text) + "\n" + "rappel" + "\t" + str(evaluation_rappel)
            +"\n"+"precision :"+"\t"+str(evaluation_precision))
            print("evl rappel", evaluation_rappel)
        if self.radioButton12.isChecked():
            doc = cleaner.evaluate_query_vect(query_text, index, collection, "JAC", stemming=True)
            print("doc eval ", query)
            evaluation_rappel,evaluation_precision  = cleaner.evaluation_Rappel(doc, query, qrels)
            #evaluation_precision=cleaner.evaluation_Precision(doc,query,qrels)


            self.listWidget_7.addItem(
                "query text:" + "\t" + str(query_text) + "\n" + "rappel" + "\t" + str(evaluation_rappel)
            +"\n"+"precision :"+"\t"+str(evaluation_precision))

            print("evl rappel", evaluation_rappel)
#What articles exist which deal with TSS
def getVector(self, query, cleaner, collection, index):

        if self.radioButton5.isChecked():
            self.listWidget_3.clear()
            print("hello")
            doc = cleaner.evaluate_query_vect(query, index, collection, method="PI", stemming=True)
            for k, v in doc.items():
                print(k, v)
                self.listWidget_3.addItem(str(k) + "\t" + str(v))

        if self.radioButton6.isChecked():
            self.listWidget_3.clear()
            print("hello")
            doc = cleaner.evaluate_query_vect(query, index, collection, method="COS", stemming=True)
            for k, v in doc.items():
                print(k, v)
                self.listWidget_3.addItem(str(k) + "\t" + str(v))
        if self.radioButton7.isChecked():
            self.listWidget_3.clear()
            print("hello")
            doc = cleaner.evaluate_query_vect(query, index, collection, method="DICE", stemming=True)
            for k, v in doc.items():
                print(k, v)
                self.listWidget_3.addItem(str(k) + "\t" + str(v))
        if self.radioButton8.isChecked():
            self.listWidget_3.clear()
            print("hello")
            doc = cleaner.evaluate_query_vect(query, index, collection, method="JAC", stemming=True)
            for k, v in doc.items():
                print(k, v)
                self.listWidget_3.addItem(str(k) + "\t" + str(v))
                print("end")

def getbool(self, query, cleaner, collection):

        print("booool")
        doc = cleaner.bool_model(query, collection)
        print(doc)
        self.listWidget_2.addItems(doc)
        print("end")

def getWordByDoc(self, cleaner, mot):
        doc = []
        print("enter")
        if self.radioButton1.isChecked():
            print("enter")
            self.listWidget.clear()
            doc = cleaner.getDocsWithTerme(mot, "text.txt")
            print(doc)
            self.listWidget.addItems(doc)

        if self.radioButton2.isChecked():
            self.listWidget.clear()
            print("entre")
            doc = cleaner.getDocsTerme(mot, "text.txt")
            print(doc)
            self.listWidget.addItems(doc)
            print("end")

        if self.radioButton3.isChecked():
            self.listWidget.clear()
            print("entre raido button 3")
            for k, v in index.items():

                for key, val in v.items():
                    # i=0
                    # while i<len(val):
                    print("lll", k, key, val)
                    self.listWidget.addItem(str(key) + "\t|" + str(k) + "\t|" + str(val))
        if self.radioButton4.isChecked():
            self.listWidget.clear()
            print("entre radio button 4")
            for k, v in collection.items():

                for key, val in v.items():
                    # i=0
                    # while i<len(val):
                    print("lll", k, key, val)
                    #   i+=1
                    self.listWidget.addItem(str(key) + "\t|" + str(k) + "\t|" + str(val))

if __name__ == "__main__":
        import sys

        app = QtWidgets.QApplication(sys.argv)
        style = """
                    QWidget{
                    background:#926E68;
                    }

                   QTextEdit {
          background-color: #F1F1F1;
          color: #000;
          border-radius : 12px;
          text-align: center;

        }

        QLineEdit {
            border: none;
            border-bottom: 1px solid #E0E0E0;
            padding-top: 10px;
            padding-bottom: 9px;
        }


        QCheckBox::indicator {
            border: 2px solid #999999;
            border-radius: 1px;
        }

        QRadioButton {
            height 10px;
            padding: 5px;
        }

        QRadioButton::indicator{ 
            border: 2px solid #999999; 
            border-radius: 6px;
            background-color: white; 
            width: 10px;
            height: 10px;
            margin-left: 5px;
        }

        QRadioButton::indicator::checked{ 
            border-color: #00BCD4;
            background-color: #00BCD4;
        }

                    """

        app.setStyleSheet(style)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_())
